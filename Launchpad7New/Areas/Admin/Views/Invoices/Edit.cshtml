@model Launchpad7New.Areas.Admin.Models.Invoice

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout1.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Invoice</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserId)
        <div class="form-group">
            <label class="control-label col-md-2">Select Member</label>
            <div class="col-md-6">
                
                <input type="text" value="@ViewBag.UserId" class="form-control" id="UserId" name="UserId" disabled="disabled" />
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.PaymentMethod, EnumHelper.GetSelectList(typeof(Launchpad.Enums.PaymentMethod)), new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.PaymentMethod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackageId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownList("PackageId", new SelectList(ViewBag.packglist, "Id", "Name"), "Select Package", new { @class = "form-control", @readonly = "readonly" })
                @*@Html.DropDownListFor(m => m.PackageId, (SelectList)ViewBag.packglist, "Select Packages", new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.PackageId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Members, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Members, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Members, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IssueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.IssueDate, "{0:d MMM yyyy}", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IssueDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.CreatedDate, "{0:d MMM yyyy}", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.Status, EnumHelper.GetSelectList(typeof(Launchpad.Enums.Status)) , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.PaymentDate, "{0:d MMM yyyy}", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextAreaFor(model => model.Comments, new { @class = "form-control", @cols="8", @rows="6" })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        

        @*<div class="form-group">
            @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
            </div>
        </div>*@

      
        @*<div class="form-group">
            @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.UpdatedDate, "{0:d MMM yyyy}", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <input type="submit" value="Save" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

<div>
 
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $("#PaymentDate, #IssueDate").datepicker({

        // showOn: "button",
        //buttonImage: "@Url.Content("~/Content/images/calendar.png")",
        buttonImageOnly: true,
        duration: "fast",
        changeMonth: true,
        changeYear: true,
        // format: 'd, M Y',
        constrainInput: true,
        // maxDate: '0',
        // minDate: '-5Y',
        // buttonText: "Select date"
    });
</script>

<script>

    $("#UserId").change(function () {

        var Userid = $('#UserId option:selected').val();
        //var totalmembers = $("#Members").val();

        $.ajax({
            type: "GET",
            url: '@Url.Action("CalcPkgPrice", "Invoices")',
            contentType: 'application/json',
            dataType: "json",
            data: { "Userid": Userid, },

            success: function (result) {
                //debugger;
                var data = JSON.parse(result);
                $("#TotalPrice").val(data.TotalPrice);
                $("#PackageId").val(data.PackageId);
                $("#Members").val(data.Members);
                //$("#")
            }
        });

    });
</script>

}
